AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >-



Parameters:
  AppId:
    Type: String

  Project:
    Description: nome do Project
    Type: String
    Default: Pontte

  Environment:
    Description: ambiente de execucao do servico
    Type: String
    AllowedValues:
      - dev
      - staging
      - prod

Conditions:
  Prod: !Equals [ !Ref Environment, prod ]

# https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: python3.7
    MemorySize: 1024
    Timeout: 120
    Environment:
      Variables:
        API_ENDPOINT: !If [ Prod, 'apibugs.pontte.com.br', !Sub 'bugs-api-${Environment}.pontte.com.br' ]
    Tags:
      Project: !Ref Project
      Environment: !Ref Environment

#  PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${AppId}-${AWS::Region}-PermissionsBoundary'

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  Deployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref APIDomainName
      Description: BugApi deployment
      StageName: "v1"

  APIDomainName:
    Type: "AWS::ApiGateway::DomainName"
    Properties:
      DomainName:
        !If [ Prod, "apibugs.pontte.com.br", !Sub "bugs-api-{Environment}.pontte.com.br" ]
      CertificateArn: "arn:aws:acm:us-east-1:848638426587:certificate/639f5ab2-c77a-4f62-8250-c85716a6753f"

  # Acessos para log
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"

  ApiGatewayAccount:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn


  BugReportApp:
    Type: AWS::Serverless::Application
    Properties:
      Location: bug-report-template.yml
      Parameters:
        Project: !Ref Project
        Environment: !Ref Environment
